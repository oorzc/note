(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{842:function(n,e,t){"use strict";t.r(e);var a=t(5),r=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"linux软件管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux软件管理"}},[n._v("#")]),n._v(" linux软件管理")]),n._v(" "),t("h2",{attrs:{id:"软件包管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件包管理"}},[n._v("#")]),n._v(" 软件包管理")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("在系统管理中，软件包的管理是最重要的，是系统管理的基础的基础，\n只有我们学会软件包的管理才能谈得上其它的应用。\nRPM\nRPM是软件管理程序，提供软件的安装、升级、查询、反安装的功能。\n优点：\na、安装方便，软件中所有数据都经过编译和打包\nb、查询、升级、反安装方便\n缺点：\na、缺乏灵活性\nb、存在相依属性\n用法：\nrpm  参数   软件包\n指令选项\n-i：安装。\n-U：升级安装，如果不存在也安装。\n-F：更新安装，如果不存在不安装。\n-v：查看信息。\n-h：有进度条。\n--replacepkgs：强制覆盖安装。\n--nodeps：不考虑相依属性。\n-q <软件名>：查询。\n-qa：查询所有。\n-ql <软件名>：列出软件的文件清单。\n-qi <软件名>：列出软件信息。\n-qf <文件名>：查询文件所属软件。\n-e <软件名>：删除软件。\n例子：\nrpm -ivh bind-9.3.6-4.P1.el5_4.2.i386.rpm#安装\nrpm -Uvh/Fvh bind-9.3.6-4.P1.el5_4.2.i386.rpm #升级安装\nrpm  -e  bind-9.3.6-4.P1.el5_4.2.i386 #删除软件包\nrpm -qpi *.rpm     #查看软件包里的内容\nrpm -qpl *.rpm  #查看软件包将会在系统里安装哪些部分\nrpm –qa   #列出所有被安装的rpm 软件包\n")])])]),t("h2",{attrs:{id:"yum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yum"}},[n._v("#")]),n._v(" YUM")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("yum = Yellow dog Updater, Modified主要功能是更方便的添加/删除/更新RPM包.它能自动解决包的倚赖性问题.\n　　它能便于管理大量系统的更新问题\nyum特点\n　　*可以同时配置多个资源库(Repository)\n　　*简洁的配置文件(/etc/yum.conf)\n　　*自动解决增加或删除rpm包时遇到的倚赖性问题\n　　*使用方便\n　　*保持与RPM数据库的一致性\nyum配置\n挂载光盘文件到硬盘\nmkdir –p /mnt/cdrom\nchmod 777 /mnt\nmount -t iso9660 /dev/cdrom /mnt/cdrom\n配置/etc/yum.repos.d/server.repo\n[cdrom]\nname=cdrom\nbaseurl=file:///mnt/cdrom\nenabled=1\n清除原有的yum信息\n[root@localhost ~]# yum clean all\n查看yum 信息\n[root@localhost ~]# yum list\nyum管理软件\nyum  install –y   software   #安装软件\nyum  update  -y software    #更新软件\nyum  remove  -y  software   #删除软件\nyum  list     #列出资源库中特定的可以安装或更新以及已经安装的rpm包\nyum grouplist # 累出所有软件包群组\nyum groupinstall   ‘包群组名’ # 安装软件包群组\nyum groupremove  ‘包群组名\nyum  info    包名    #查看软件包信息\nyum search  包名 # 搜索\nyum clean all  #清除缓存\n\nyum添加163源\n地址：\nhttp://mirrors.163.com/.help/centos.html\n下载方式：\nwget http://mirrors.163.com/.help/CentOS6-Base-163.repo\n")])])]),t("h2",{attrs:{id:"apt-get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apt-get"}},[n._v("#")]),n._v(" apt-get")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("用Linux apt-get命令的第一步就是引入必需的软件库，Debian的软件库也就是所有Debian软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get就能搜索到我们想要的软件。/etc/apt/sources.list是存放这些地址列表的配置文件，其格式如下：\n\ndeb [web或ftp地址] [发行版名字][main/contrib/non-free]\n\n我们常用的Ubuntu就是一个基于Debian的发行\n命令：\napt-get update：在修改/etc/apt/sources.list或者/etc/apt/preferences之后运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的。\napt-get install packagename：安装一个新软件包\napt-get remove packagename：卸载一个已安装的软件包（保留配置文件）\napt-get –purge remove packagename：卸载一个已安装的软件包（删除配置文件）\napt-get autoclean apt：会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件\napt-get clean：这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。\napt-get upgrade：更新所有已安装的软件包\napt-get dist-upgrade：将系统升级到新版本\napt-get autoclean：定期运行这个命令来清除那些已经卸载的软件包的.deb文件。\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);