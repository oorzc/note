(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{887:function(s,a,t){"use strict";t.r(a);var e=t(5),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_17-module-的加载实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-module-的加载实现"}},[s._v("#")]),s._v(" 17.Module 的加载实现")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("本章介绍如何在浏览器和 Node 之中加载 ES6 模块，以及实际开发中经常遇到的一些问题（比如循环加载）。")]),s._v(" "),t("h2",{attrs:{id:"_1-浏览器加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器加载"}},[s._v("#")]),s._v(" 1.浏览器加载")]),s._v(" "),t("h3",{attrs:{id:"传统方法-传统方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传统方法-传统方法"}},[s._v("#")]),s._v(" 传统方法 {#传统方法}")]),s._v(" "),t("p",[s._v("在 HTML 网页中，浏览器通过"),t("code",[s._v("<script>")]),s._v("标签加载 JavaScript 脚本。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 页面内嵌的脚本 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"application/javascript"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module code")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 外部脚本 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"application/javascript"')]),s._v(" src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/myModule.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("默认情况下，浏览器是同步加载 JavaScript 脚本，即渲染引擎遇到"),t("code",[s._v("<script>")]),s._v("标签就会停下来，等到执行完脚本，再继续向下渲染。如果是外部脚本，还必须加入脚本下载的时间。")]),s._v(" "),t("p",[s._v("如果脚本体积很大，下载和执行的时间就会很长，因此成浏览器堵塞，用户会感觉到浏览器“卡死”了，没有任何响应。这显然是很不好的体验，所以浏览器允许脚本异步加载，下面就是两种异步加载的语法。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/myModule.js"')]),s._v(" defer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/myModule.js"')]),s._v(" async"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("defer")]),t("strong",[s._v("是“渲染完再执行”")]),s._v("，"),t("code",[s._v("async")]),s._v("是**“下载完就执行”**。另外，如果有多个"),t("code",[s._v("defer")]),s._v("脚本，会按照它们在页面出现的顺序加载，而多个"),t("code",[s._v("async")]),s._v("脚本是不能保证加载顺序的。")]),s._v(" "),t("h3",{attrs:{id:"加载规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载规则"}},[s._v("#")]),s._v(" 加载规则")]),s._v(" "),t("p",[s._v("浏览器加载 ES6 模块，也使用"),t("code",[s._v("<script>")]),s._v("标签，但是要加入"),t("code",[s._v('type="module"')]),s._v("属性。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),s._v(" src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("浏览器对于带有"),t("code",[s._v('type="module"')]),s._v("的"),t("code",[s._v("<script>")]),s._v("，都是异步加载，不会造成堵塞浏览器，即等到整个页面渲染完，再执行模块脚本，等同于打开了"),t("code",[s._v("<script>")]),s._v("标签的"),t("code",[s._v("defer")]),s._v("属性。")]),s._v(" "),t("p",[s._v("对于外部的模块脚本（上例是"),t("code",[s._v("foo.js")]),s._v("），有几点需要注意。")]),s._v(" "),t("ul",[t("li",[s._v("代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。")]),s._v(" "),t("li",[s._v("模块脚本自动采用严格模式，不管有没有声明"),t("code",[s._v("use strict")]),s._v("。")]),s._v(" "),t("li",[s._v("模块之中，可以使用"),t("code",[s._v("import")]),s._v("命令加载其他模块（"),t("code",[s._v(".js")]),s._v("后缀不可省略，需要提供绝对 URL 或相对 URL），也可以使用"),t("code",[s._v("export")]),s._v("命令输出对外接口。")]),s._v(" "),t("li",[s._v("模块之中，顶层的"),t("code",[s._v("this")]),s._v("关键字返回"),t("code",[s._v("undefined")]),s._v("，而不是指向"),t("code",[s._v("window")]),s._v("。也就是说，在模块顶层使用"),t("code",[s._v("this")]),s._v("关键字，是无意义的。")]),s._v(" "),t("li",[s._v("同一个模块如果加载多次，将只执行一次。")])]),s._v(" "),t("h1",{attrs:{id:"_17-1-es6模块与commonjs模块的差异"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-es6模块与commonjs模块的差异"}},[s._v("#")]),s._v(" 17.1 ES6模块与CommonJS模块的差异")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("commonJS是服务器端的模块化规范，但是浏览器前端是不能直接用的，需要有browserify等工具的配合。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(' var $ = require("jquery");\n    //    方法\n function myFunc(){};\n\n //    暴露公共方法（一个）\n module.exports = myFunc;\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("讨论 Node 加载 ES6 模块之前，必须了解 ES6 模块与 CommonJS 模块完全不同。")]),s._v(" "),t("p",[s._v("它们有两个重大差异。")]),s._v(" "),t("ul",[t("li",[s._v("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")]),s._v(" "),t("li",[s._v("CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。")])]),s._v(" "),t("p",[s._v("第二个差异是因为** CommonJS 加载的是一个对象（即"),t("code",[s._v("module.exports")]),s._v("属性），**该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("参考：")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://blog.csdn.net/sinat_25127047/article/details/52502800",target:"_blank",rel:"noopener noreferrer"}},[s._v("Javascript模块化编程——使用AMD，CommonJS，ES Harmony"),t("OutboundLink")],1)]),s._v(" "),t("h1",{attrs:{id:"_17-2-node的加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-node的加载"}},[s._v("#")]),s._v(" 17.2 Node的加载")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("Node 对 ES6 模块的处理比较麻烦，因为它有自己的 CommonJS 模块格式，与 ES6 模块格式是不兼容的。目前的解决方案是，将两者分开，ES6 模块和 CommonJS 采用各自的加载方案。")]),s._v(" "),t("p",[s._v("在静态分析阶段，一个模块脚本只要有一行"),t("code",[s._v("import")]),s._v("或"),t("code",[s._v("export")]),s._v("语句，Node 就会认为该脚本为 ES6 模块，否则就为 CommonJS 模块。如果不输出任何接口，但是希望被 Node 认为是 ES6 模块，可以在脚本中加一行语句。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("export {};\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面的命令并不是输出一个空对象，而是不输出任何接口的 ES6 标准写法。")]),s._v(" "),t("p",[s._v("如何不指定绝对路径，Node 加载 ES6 模块会依次寻找以下脚本，与"),t("code",[s._v("require()")]),s._v("的规则一致。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import './foo';\n// 依次寻找\n//   ./foo.js\n//   ./foo/package.json\n//   ./foo/index.js\n\nimport 'baz';\n// 依次寻找\n//   ./node_modules/baz.js\n//   ./node_modules/baz/package.json\n//   ./node_modules/baz/index.js\n// 寻找上一级目录\n//   ../node_modules/baz.js\n//   ../node_modules/baz/package.json\n//   ../node_modules/baz/index.js\n// 再上一级目录\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);