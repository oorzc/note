(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{845:function(n,s,e){"use strict";e.r(s);var t=e(5),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"rsync介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rsync介绍"}},[n._v("#")]),n._v(" rsync介绍")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("Rsync(Remote Synchronize) 是一个远程资料同步工具，可通过LAN/WAN快速同步多台主机，Rsync使用所为的“Rsync演算法”来使本地主机和远程主机之间达到同步，这个演算法并不是每次都整份传送，它只传送两台计算机之间所备份的资料不同的部分，因此速度相当快。\nRsync的优点如下：\n1、可以镜像保存整个目录树和文件系统。\n2、可以很容易的做到保持原来文件的许可权、时间、软链接等。\n3、无须特使许可权即可安装。\n4、拥有优化的流程，文件传输效率高。\n5、可以使用Rsh、SSH等方式来传输文件，当然也可以直接通过Socket连接。\n6、支持匿名传输。\n         另外，与SCP相比，传输速度不是一个层次级的。我们在局域网时经常用Rsync和SCP传输大量Mysql数据，发现Rsync至少比Scp快20倍以上，所以大家如果需要在Linux/Unix服务器之间互传海量资料，Rsync是非常好的选择。\n")])])]),e("h2",{attrs:{id:"rsync服务端方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rsync服务端方式"}},[n._v("#")]),n._v(" rsync服务端方式")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("首先检查rsync是否安装：\nrpm –q rsync\nrsync-2.6.8-3.1\n说明rsync已安装，如果提示出现 package rsync is not installed  则说明这个软件报没有安装大家可以使用yum进行安装\n另外，关闭防火墙和SElinux，因为是内网中传输，所以这些没必要\nservice iptables stop && chkconfig iptables off\nsetenforce 0\n\nvi /etc/rsyncd.conf  #创建配置文件，添加以下代码\n\n#global settings\nuid = 0\ngid = 0\nuser chroot = false\nlog file = /var/log/rsyncd.log\nlock file = /var/run/rsyncd.lock\nport=873\nmax connections = 200\n#覆盖客户指定的IP超时时间，也就是说rsync服务器不会永远等待一个崩溃的客户端。\ntimeout = 600\n\n#module settings\n[www]\npath = /home/bb\n#执行数据同步的用户名，可以设置多个，用英文状态下逗号隔开\nauth users = root\n#密码配置文件\nsecrets file = /etc/rsyncd.passwd\n#设置为no，cwRsync客户端可上传文件,yes只读\nread only = no\n#设置为no，cwRsync客户端可下载文件,yes不能下载\nwrite only = no\n#允许上传服务器白名单 *为所有 hosts allow不同模块不可相同\nhosts allow = 11.10.226.177/888\n#禁止数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开\nhosts deny = 12.168.21.254\n#显示Rsync服务端资源列表\nlist = yes\n\n\n[bbb]\npath= /home/hh\nauth users = test\nsecrets file = /etc/rsyncd.passwd\nread only = no\nwrite only = no\nhosts allow = 111.10.226.171/666\nhosts deny = 192.168.21.254\nlist = yes\n\n\n注意：\n1、[backup]  认证模块名和 path = /backup/ 参与同步的目录\n这里的path 大家要记好了，这里不要随便的一设置就直接完事，要知道这里是认证模块的，以后从客户机备份的数据会存储在这里。\n2、auth users = redhat 认证的用户名 \n这个名字是服务器端实实在在存在用户，大家不要直接跟步骤走却忽略了这点。如果服务器端少了这个的话我估计你的数据同步就实现不了，大家要谨记。\n3、path 参与同步的目录 要做授权处理\nmkdir /home/hh\nchmod -R 777 /home/hh\n4、添加密码 用户名称与密码以冒号分隔，多个用户名和密码可以多行\nvi /etc/rsyncd.passwd\ntest1:test1\ntest2:test2\necho root:root > /etc/rsyncd.passwd\n设置权限为600\nchmod 600 /etc/rsyncd.passwd\n5、启动配置\n[root@test rsync-3.0.4]# vi /etc/xinetd.d/rsync \n将disable=yes改为no\nservice rsync\n{\n        disable = no\n        socket_type     = stream\n        wait            = no\n        user            = root\n        server          = /usr/bin/rsync\n        server_args     = --daemon\n        log_on_failure  += USERID\n}\n\n[root@test home]# /etc/init.d/xinetd restart\nStopping xinetd:                                           [  OK  ]\nStarting xinetd:                                           [  OK  ]\n\n如果xinetd没有的话，需要安装一下\n[root@test home]# yum -y install xinetd\n\nRSYNC服务端启动的两种方法:\n*启动rsync服务端（独立启动）\nps -aux | grep rsyn  //查看进程\nkill -9 21407  //关掉进程id 21407\n[root@test home]# /usr/bin/rsync --daemon --config=/etc/rsyncd.conf\n\n启动rsync服务端 （有xinetd超级进程启动）\n[root@test home]# /etc/init.d/xinetd reload\n\n配置rsync自动启动\n[root@test etc]# chkconfig rsync on\n[root@test etc]# chkconfig rsync --list\n\n加入rc.local\n在各种操作系统中，rc文件存放位置不尽相同，可以修改使系统启动时把rsync --daemon加载进去。\n[root@test home]# vi /etc/rc.local\n/usr/local/rsync –daemon    #加入一行\n")])])]),e("h2",{attrs:{id:"rsync客户端方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rsync客户端方式"}},[n._v("#")]),n._v(" rsync客户端方式")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("从本地上传到服务器上去\nrsync -avz --progress ./* root@120.78.219.51::www\n./* 将当前目录下的所有文件上传到服务器 模块名www 路径path（/home/xxx chmod -R 777 /home/xxx）下\n\n从服务器上下载文件\nrsync -avz --progress root@120.78.219.51::www ./\n下载文件 模块名www 路径内的文件\n\n\n常用：rsync -av\n下载：rsync [参数]  远程文件（远程路径）  本地目录\n上传：rsync [参数]  本地文件              远程目录\nrsync常用参数\n如果不需要交互式的操作，rsync平时也可以像scp那样工作，下列为常用rsync参数。\n\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD\n-v --verbose：详细模式输出\n-r --recursive：对子目录以返回模式处理。\n-p --perms：保持文件许可权\n-o --owner：保持文件属主信息\n-g --group：保持文件组信息\n-t --times：保持文件时间信息\n--delete：删除哪些DST中存在而SRC中不存在的文件或目录\n--delete-excluded：同样删除接收端哪些该选项制定排出的文件\n-z --compress：对备份的文件在传输时进行压缩处理\n--exclude=PATTERN：制定排除不需要传输的文件\n--include=PATTERN：制定不排除需要传输的文件\n--exclude-from=FILE：排除FILE中制定模式的文件\n--include-from=FILE：不排除FILE中制定模式匹配的文件\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);