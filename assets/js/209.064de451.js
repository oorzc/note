(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{758:function(v,_,p){"use strict";p.r(_);var t=p(5),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("h1",{attrs:{id:"其它"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[v._v("#")]),v._v(" 其它")]),v._v(" "),p("h2",{attrs:{id:"apache与nginx的优缺点比较"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#apache与nginx的优缺点比较"}},[v._v("#")]),v._v(" Apache与Nginx的优缺点比较")]),v._v(" "),p("p",[v._v("Apache的优点：")]),v._v(" "),p("p",[v._v("1、性能稳定")]),v._v(" "),p("p",[v._v("2、处理动态请求时，Apache性能更高（动态请求会用到伪静态，而Apache对rewrite支持的更好）")]),v._v(" "),p("p",[v._v("3、rewrite模块更完善 ，比nginx 的rewrite 强大")]),v._v(" "),p("p",[v._v("4、模块众多")]),v._v(" "),p("p",[v._v("Nginx的优点：")]),v._v(" "),p("p",[v._v("1、轻量级，相对Apache占用更少的内存和资源")]),v._v(" "),p("p",[v._v("2、因为Nginx是非阻塞型的，高并发下能保持低资源低消耗，因此更适合做高并发")]),v._v(" "),p("p",[v._v("3、处理静态网页上表现的更好（简单、占资源少）")]),v._v(" "),p("p",[v._v("4、社区活跃，各种高性能模块出品迅速啊")]),v._v(" "),p("h2",{attrs:{id:"git-与-svn-区别"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#git-与-svn-区别"}},[v._v("#")]),v._v(" Git 与 SVN 区别")]),v._v(" "),p("ol",[p("li",[v._v("最核心的区别Git是分布式的，而Svn不是分布的。虽然Git跟Svn一样有自己的集中式版本库和Server端，但Git更倾向于分布式开发，因为每一个开发人员的电脑上都有一个Local Repository,所以即使没有网络也一样可以Commit，查看历史版本记录，创建项目分支等操作，等网络再次连接上Push到Server端；")])]),v._v(" "),p("p",[v._v("2)Git把内容按元数据方式存储，而SVN是按文件；")]),v._v(" "),p("ol",{attrs:{start:"3"}},[p("li",[p("p",[v._v("Git没有一个全局版本号，而SVN有：这是跟SVN相比Git缺少的最大的一个特征；")])]),v._v(" "),p("li",[p("p",[v._v("Git的内容的完整性要优于SVN:；")])]),v._v(" "),p("li",[p("p",[v._v("Git下载下来后，在OffLine状态下可以看到所有的Log,SVN不可以；")])]),v._v(" "),p("li",[p("p",[v._v("刚开始用时很狗血的一点，SVN必须先Update才能Commit,忘记了合并时就会出现一些错误，git还是比较少的出现这种情况；")])])]),v._v(" "),p("p",[v._v("7) 克隆一份全新的目录以同样拥有五个分支来说，SVN是同时复製5个版本的文件,也就是说重复五次同样的动作。而Git只是获取文件的每个版本的元素，然后只载入主要的分支(master)在我的经验,克隆一个拥有将近一万个提交(commit),五个分支,每个分支有大约1500个文件的 SVN,耗了将近一个小时！而Git只用了区区的1分钟！")]),v._v(" "),p("p",[v._v("8) 版本库（repository):SVN只能有一个指定中央版本库。当这个中央版本库有问题时，所有工作成员都一起瘫痪直到版本库维修完毕或者新的版本库设立完成。而 Git可以有无限个版本库。")]),v._v(" "),p("p",[v._v("9)分支（Branch）：在SVN，分支是一个完整的目录。且这个目录拥有完整的实际文件。如果工作成员想要开啟新的分支，那将会影响“全世界”！每个人都会拥有和你一样的分支。如果你的分支是用来进行破坏工作（安检测试），那将会像传染病一样,你改一个分支，还得让其他人重新切分支重新下载，十分狗血。而 Git，每个工作成员可以任意在自己的本地版本库开啟无限个分支。")]),v._v(" "),p("p",[v._v("最值得一提，我可以在Git的任意一个提交点（commit point）开启分支！（其中一个方法是使用gitk –all 可观察整个提交记录，然后在任意点开啟分支。）")]),v._v(" "),p("p",[v._v("10)提交（Commit）在SVN，当你提交你的完成品时，它将直接记录到中央版本库。当你发现你的完成品存在严重问题时，你已经无法阻止事情的发生了。如果网路中断，你根本没办法提交！而Git的提交完全属於本地版本库的活动。而你只需“推”（git push）到主要版本库即可。Git的“推”其实是在执行“同步”（Sync）。")]),v._v(" "),p("p",[v._v("最后总结一下：")]),v._v(" "),p("p",[v._v("SVN的特点是简单，只是需要一个放代码的地方时用是OK的。")]),v._v(" "),p("p",[v._v("Git的特点版本控制可以不依赖网络做任何事情，对分支和合并有更好的支持")]),v._v(" "),p("p",[v._v("PHP 基础")]),v._v(" "),p("p",[v._v("1：变量的传值与引用。")]),v._v(" "),p("p",[v._v("2：变量的类型转换和判断类型方法。")]),v._v(" "),p("p",[v._v("3： php运算符优先级，一般是写出运算符的运算结果。")]),v._v(" "),p("p",[v._v("4： PHP中函数传参，闭包，判断输出的 echo， print是不是函数等。")]),v._v(" "),p("p",[v._v("5： PHP数组，数组函数，数组遍历，预定义数组（ 面试必出 ）。")]),v._v(" "),p("p",[v._v("6： PHP面向对象，魔术方法，封装、继承、多态。设计模式，包括（单利、工厂、迭代器、")]),v._v(" "),p("p",[v._v("装饰、命令、策略）。")]),v._v(" "),p("p",[v._v("7：正则表达式，每个标号含义，邮箱、网址、标签匹配，正则函数（ 面试必出 ）。")]),v._v(" "),p("p",[v._v("8： PHP异常处理（级别，错误日志，控制错误输出）。")]),v._v(" "),p("p",[v._v("9： PHP时间函数，日期计算函数。")]),v._v(" "),p("p",[v._v("10：文件系统， 记录日志、目录、文件的遍历、上传、多方法得到文件扩展名、文件引用")]),v._v(" "),p("p",[v._v("方式、引用函数区别。（ 面试必出 ）。")]),v._v(" "),p("p",[v._v("11：会话控制，主要说原理。 session与 cookie在分布式应用中出现问题的解决方案。")]),v._v(" "),p("p",[v._v("12： PHP模板引擎，常用模板引擎特点， MVC好与不好的地方。")]),v._v(" "),p("p",[v._v("13： PHP安全处理，过滤函数。")]),v._v(" "),p("p",[v._v("14： XML的使用。")]),v._v(" "),p("p",[v._v("15： PHP字符串的处理，包括转义（安全）、编码、截取、定位、与数组间的转换、处理函")]),v._v(" "),p("p",[v._v("数等。（ 面试必出 ）。")]),v._v(" "),p("p",[v._v("16： Socket编程，各种协议， head头， curl参数含义。")]),v._v(" "),p("p",[v._v("17：网络状态码含义，常用（ 204， 304, 404, 504， 502）。")]),v._v(" "),p("p",[v._v("18： Apache配置文件， PHP配置文件，各个含义字段的含义。")]),v._v(" "),p("p",[v._v("19：网络各种攻击的名词含义（ SQL攻击、 XSS、 CSRF、 DDos），防止措施。")]),v._v(" "),p("p",[v._v("20： url的处理函数，得到 url指定的部分。")]),v._v(" "),p("p",[v._v("Mysql 基础")]),v._v(" "),p("p",[v._v("1：基础 sql语句书写（一般让写关联和子查询语句）")]),v._v(" "),p("p",[v._v("2：索引的创建，优缺点，最左原则")]),v._v(" "),p("p",[v._v("3：存储引擎，常用的几个，优缺点，差别，原理（ 面试必出 ）")]),v._v(" "),p("p",[v._v("4： sql注入的处理方法")]),v._v(" "),p("p",[v._v("5： mysql处理函数（ PHP中封装的）")]),v._v(" "),p("p",[v._v("6： PDO的使用方法，为什么使用")]),v._v(" "),p("p",[v._v("7： mysql的优化，表拆分等")]),v._v(" "),p("p",[v._v("8：事务处理， sql语句的处理效率等")]),v._v(" "),p("p",[v._v("9：数据表字段的类型，同类型间的区别，改如何选取， int(10)与 int(11)的区别等。")]),v._v(" "),p("p",[v._v("10：数据库索引使用的那种数据结构，画出数据结构")]),v._v(" "),p("p",[v._v("Linux")]),v._v(" "),p("p",[v._v("1：常用命令的使用， vim编辑器的使用。")]),v._v(" "),p("p",[v._v("2：进程， cpu等信息的查看命令。")]),v._v(" "),p("p",[v._v("3：文件内查看命令（主要涉及统计信息）。")]),v._v(" "),p("p",[v._v("4： Shell的使用，命令操作。")]),v._v(" "),p("p",[v._v("NoSql")]),v._v(" "),p("p",[v._v("1： Redis的应用场景，结合微博业务说出他的具体应用。")]),v._v(" "),p("p",[v._v("2： Redis与 MC支持数据 的不同点，两者都支持哪些数据结构的存储，写越多越好。")]),v._v(" "),p("p",[v._v("3： Redis持久化存储的原理，与 Mysql的应用区别。怎样保持持久化数据与内存数据同步")]),v._v(" "),p("p",[v._v("的关系（ Redis同步机制）")]),v._v(" "),p("p",[v._v("4： Redis与 MC在并发状态下的性能比较。")]),v._v(" "),p("p",[v._v("5： MC的内存管理机制，当一个数据需要存储的时候怎样分配内存空间")]),v._v(" "),p("p",[v._v("6： Redis的内存管理机制，与 MC有哪些不同点。")]),v._v(" "),p("p",[v._v("开发环境")]),v._v(" "),p("p",[v._v("1： PHP7中的新特性与废弃的特性")]),v._v(" "),p("p",[v._v("2：为什么要使用 PHP7， PHP7快在哪里")]),v._v(" "),p("p",[v._v("版本控制")]),v._v(" "),p("p",[v._v("1： git的使用命令，例如：写出版本回退命令。")]),v._v(" "),p("p",[v._v("2： git与 svn的区别。")]),v._v(" "),p("p",[v._v("3：如何进行多分支开发，包括多 图，大家记忆 PHP 部分")])])}),[],!1,null,null,null);_.default=i.exports}}]);